#  Copyright 2023 The original authors
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at

#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
version: "3.8"
services:
  grafana:
    image: "grafana/grafana:${GRAFANA_VERSION}"
    ports:
      - "3000:3000"
    environment:
      GF_PATHS_DATA: /var/lib/grafana
      GF_SECURITY_ADMIN_PASSWORD: kafka
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    container_name: grafana
    depends_on:
      - prometheus
    networks:
      - kafka-platform

  prometheus:
    image: "prom/prometheus:${PROMETHEUS_VERSION}"
    ports:
      - "9090:9090"
    volumes:
      - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: "--config.file=/etc/prometheus/prometheus.yml"
    container_name: prometheus
    networks:
      - kafka-platform

  jmx-kafka101:
    image: "sscaling/jmx-prometheus-exporter"
    ports:
      - "5556:5556"
    environment:
      CONFIG_YML: "/etc/jmx_exporter/config.yml"
    volumes:
      - ./etc/jmx_exporter/config_kafka101.yml:/etc/jmx_exporter/config.yml
    container_name: jmx-kafka101
    depends_on:
      - kafka101
    networks:
      - kafka-platform

  kafkaexporter101:
    image: danielqsj/kafka-exporter
    command: ["--kafka.server=kafka101:29092"]
    ports:
      - 9308:9308
    container_name: kafkaexporter101
    depends_on:
      - kafka101
    networks:
      - kafka-platform

  zk1:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181:2181"
    container_name: zookeeper1
    networks:
      - kafka-platform
    volumes:
      - /home/itdev/dockervolumes/zookeeper/data:/var/lib/zookeeper/data
      - /home/itdev/dockervolumes/zookeeper/logs:/var/lib/zookeeper/log

  kafka101:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    depends_on:
      - zk1
    ports:
      - "9092:9092"
      - "9991:9991"
    container_name: kafka101
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_JMX_PORT: 9991
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka101:29092,PLAINTEXT_HOST://${SERVER_HOSTNAME}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_RETENTION_MS: 60000
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka101:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper1:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: "false"
      KAFKA_HEAP_OPTS: ${KAFKA_HEAP_OPTS}
    networks:
      - kafka-platform
    volumes:
      - /home/itdev/dockervolumes/kafka:/var/lib/kafka/data

networks:
  kafka-platform:
    name: kafka-platform
    driver: bridge
